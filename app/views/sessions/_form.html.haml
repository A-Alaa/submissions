= form.inputs do
  = form.input :author_id, :as => :hidden, :input_html => {:tabindex => autotab}
  = form.input :language, :required => true, :as => :select, :collection => [[t('generic.en'), 'en'], [t('generic.pt'), 'pt']], :input_html => {:tabindex => autotab}
  = form.input :track_id, :required => true, :as => :select, :collection => @tracks, :member_label => Proc.new { |tr| t(tr.title) }, :input_html => {:tabindex => autotab}, :hint => t('formtastic.hints.session.track_id', :year => "/#{@conference.year}")
  = form.input :audience_level_id, :required => true, :as => :select, :collection => @audience_levels, :member_label => Proc.new { |al| t(al.title) }, :input_html => {:tabindex => autotab}, :hint => t('formtastic.hints.session.audience_level_id', :year => "/#{@conference.year}")
  = form.input :session_type_id, :required => true, :as => :select, :collection => @session_types, :member_label => Proc.new { |st| t(st.title) }, :input_html => {:tabindex => autotab, :data => {:"durations-to-hide" => durations_to_hide(@session_types)}}, :hint => t('formtastic.hints.session.session_type_id', :year => "/#{@conference.year}")
  = form.input :duration_mins, :required => true, :as => :select, :collection => options_for_durations(@session_types), :input_html => {:tabindex => autotab}, :hint => duration_mins_hint(@session_types)
  = form.input :audience_limit, :input_html => {:tabindex => autotab}
  = form.input :title, :required => true, :input_html => {:tabindex => autotab}
  = form.input :keyword_list, :required => true, :input_html => {:tabindex => autotab, :'data-autocomplete-url' => tags_path(:format => :js), :maxlength => nil}, :as => :hidden
  %li 
    %label 
      = t('formtastic.labels.session.keyword_list')
      %abbr *
    %span.counter#tagCounter 10
    %ul.sessionTags
      - @tags.each do |tag|
        %li 
          = t(tag)
          %span.hidden=(tag)
    %p.inline-hints
      = t('formtastic.hints.session.tag_list')

  = form.input :second_author_username, :input_html => {:tabindex => autotab, :'data-autocomplete-url' => users_path(:format => :js)}
  = form.input :target_audience, :required => true, :input_html => {:tabindex => autotab}
  = form.input :summary, :required => true, :input_html => {:rows => 10, :tabindex => autotab}, :hint => t('formtastic.hints.session.summary', :year => "/#{@conference.year}")
  = form.input :description, :required => true, :input_html => {:tabindex => autotab}, :hint => t('formtastic.hints.session.description', :year => "/#{@conference.year}")
  = form.input :mechanics, :required => true, :input_html => {:tabindex => autotab}, :hint => t('formtastic.hints.session.mechanics', :year => "/#{@conference.year}")
  = form.input :benefits, :required => true, :input_html => {:rows => 10, :tabindex => autotab}, :hint => t('formtastic.hints.session.benefits', :year => "/#{@conference.year}")
  = form.input :experience, :required => true, :input_html => {:rows => 10, :tabindex => autotab}, :hint => t('formtastic.hints.session.experience', :year => "/#{@conference.year}")

:javascript
  var tags = [];

  $(document).ready(function() {
    $("#session_session_type_id").filterOn("#session_track_id", {
      "4":  ["", "1", "2"],
      "8":  ["", "4", "5"],
      "13": ["", "9"]
    })
    $("#session_track_id").bindSelectUpdated();

    $("#session_duration_mins").filterOn("#session_session_type_id", $("#session_session_type_id").data("durations-to-hide"))
    $("#session_session_type_id").bindSelectUpdated();

    $("#session_session_type_id").bind('updated', sessionTypeActions);
    $("#session_session_type_id").bindSelectUpdated();

    $("#session_session_type_id, #session_track_id").trigger('updated');

    $('#session_title').charCount({allowed: 100});
    tags = $('#session_keyword_list').get(0).value.split(', ');
    paintSelectedKeywords();
    $('#session_target_audience').charCount({allowed: 200});
    $('#session_summary').charCount({allowed: 800});
    $('#session_description').charCount({allowed: 2400});
    $('#session_mechanics').charCount({allowed: 2400});
    $('#session_benefits').charCount({allowed: 400});
    $('#session_experience').charCount({allowed: 400});
  });

  function sessionTypeActions() {
    // Workshops, Tutorials, or Hands On
    if ($.inArray($(this).val(), ['1', '2', '4', '5', '9', '12', '16']) !== -1) {
      $("#session_audience_limit_input").show();
      // Only Workshop or Hands On
      if ($.inArray($(this).val(), ['2', '5', '9', '12', '16']) !== -1) {
        $('#session_mechanics_input').find('label abbr').show();
      } else {
        $('#session_mechanics_input').find('label abbr').hide();
      }
    } else {
      $("#session_audience_limit_input").hide();
      $("#session_audience_limit").val("");
      $('#session_mechanics_input').find('label abbr').hide();
    }
  }

  function paintSelectedKeywords() {
    for (var i = 0; i < tags.length; i++) {
      var tagItem = $('span:contains(' + tags[i] + ')').get(0).parentElement;
      $(tagItem).addClass('selectedTag');
    }
    $('#tagCounter').text(10 - tags.length);
  }

  $('.sessionTags li').click(function() {
    var newTag = $(this).find('span').text().trim();
    var index = tags.indexOf(newTag);
    if (index == -1) {
      tags.push(newTag);
      $(this).addClass('selectedTag');
    } else {
      tags.splice(index, 1);
      $(this).removeClass('selectedTag');
    }
    $('#session_keyword_list').val(tags.join());
  });
