- title t('actions.manage_reviewers')
- show_actions!

= semantic_form_for @reviewer_filter, :url => reviewers_path(@conference), :method => :get do |f|
  = f.inputs do
    = f.input :state, :as => :select, :collection => @states, :member_label => Proc.new { |s| t("reviewer.state.#{s}") }, :input_html => {:tabindex => autotab}, :include_blank => t("generic.all")
    = f.input :track_id, :as => :select, :collection => @tracks, :member_label => Proc.new { |tr| t(tr.title) }, :input_html => {:tabindex => autotab}, :include_blank => t("generic.all")
  = f.actions do
    = f.action :submit, :label => :filter_reviewer, :button_html => {:tabindex => autotab}

%table.reviewers
  %thead
    %tr
      %th.reviewer= t('formtastic.labels.reviewer.user_id')
      %th.state= t('formtastic.labels.reviewer.state')
      - @tracks.each do |track|
        %th.track= t(track.title)
      - if @conference.has_early_review?
        %th.count= t('review.early_review')
      %th.count= t('review.final_review')
      %th.actions
  %tbody
    - @reviewers.each do |reviewer|
      = content_tag_for(:tr, reviewer, :class => cycle(:odd, :even)) do
        %td.reviewer&= reviewer.user.full_name
        %td.state&= t("reviewer.state.#{reviewer.state}")
        - @tracks.each do |track|
          %td.track&= t(review_level(reviewer.accepted_preferences, track))
        - if @conference.has_early_review?
          %td.count&= reviewer.user.early_reviews.for_conference(@conference).count
        %td.count&= reviewer.user.final_reviews.for_conference(@conference).count
        %td.actions
          - if can? :destroy, reviewer
            = link_to t('actions.destroy'), reviewer_path(@conference, reviewer), :method => :delete, :confirm => t('generic.are_you_sure', :action => t('actions.destroy'))

- if can? :create, Reviewer
  = link_to t('actions.create_reviewer'), new_reviewer_path(@conference)