- title t('title.edit_conference')
- show_actions!

= semantic_form_for @conference do |form|
  = form.inputs do
    = image_tag(@conference.logo.try(:url, :medium) || "#{@conference.year}_logo.png", class: 'logo_preview', alt: 'Logo da ConferÃªncia')
    = form.file_field :logo
    = form.input :location, required: true, input_html: {tabindex: autotab}
    = form.input :start_date, required: true, as: :date_picker, input_html: {tabindex: autotab}
    = form.input :end_date, required: true, as: :date_picker, input_html: {tabindex: autotab}
    = form.input :call_for_papers, as: :date_picker, input_html: {tabindex: autotab, value: @conference.call_for_papers.try(:strftime, '%F')}
    = form.input :submissions_open, required: true, as: :date_picker, input_html: {tabindex: autotab, value: @conference.submissions_open.try(:strftime, '%F')}
    = form.input :presubmissions_deadline, as: :date_picker, input_html: {tabindex: autotab, value: @conference.presubmissions_deadline.try(:strftime, '%F')}
    = form.input :prereview_deadline, as: :date_picker, input_html: {tabindex: autotab, value: @conference.prereview_deadline.try(:strftime, '%F')}
    = form.input :submissions_deadline, required: true, as: :date_picker, input_html: {tabindex: autotab, value: @conference.submissions_deadline.try(:strftime, '%F')}
    = form.input :voting_deadline, as: :date_picker, input_html: {tabindex: autotab, value: @conference.voting_deadline.try(:strftime, '%F')}
    = form.input :review_deadline, required: true, as: :date_picker, input_html: {tabindex: autotab, value: @conference.review_deadline.try(:strftime, '%F')}
    = form.input :author_notification, required: true, as: :date_picker, input_html: {tabindex: autotab, value: @conference.author_notification.try(:strftime, '%F')}
    = form.input :author_confirmation, required: true, as: :date_picker, input_html: {tabindex: autotab, value: @conference.author_confirmation.try(:strftime, '%F')}
    = form.input :tag_list, input_html: {tabindex: autotab, :'data-autocomplete-url' => tags_path(format: :json), maxlength: nil, value: (@conference.tag_list||[]).join(',')}, as: :hidden
    %li
      %label= t('formtastic.labels.conference.tag_list')
      %ul.conferenceTags.tags
        - @tags.each do |tag|
          %li
            = t(tag)
            %span.hidden=(tag)
    = form.input :allow_free_form_tags, input_html: {tabindex: autotab}
  - unless @conference.visible?
    = form.input :visible, required: true, input_html: {tabindex: autotab}
  = form.actions do
    = form.action :submit, label: :update_conference, button_html: {tabindex: autotab}

#tracks.tabs
  %h4= t('title.tracks')
  %ul.tracks
    - @conference.tracks.each do |track|
      %li.track= link_to track.title, "#track-#{track.id}"
    %li.track= link_to '+', '#track-new'
  - @conference.tracks.each do |track|
    %div.track_tab{id: "track-#{track.id}"}
      = form_for [@conference, track], remote: true, html: {class: 'tabs'} do |f|
        - if @conference.languages.size > 1
          %ul.languages
            - @conference.languages.each do |language|
              %li.track_language= link_to language[:name], "#track-#{track.id}-#{language[:code]}"
        = f.fields_for :translated_contents do |content_form|
          %div{id: "track-#{track.id}-#{content_form.object.language}"}
            %label{for: ''}= t('formtastic.labels.track.title')
            = content_form.hidden_field(:language)
            = content_form.text_field(:title)
            .description= content_form.text_area(:content)
        = f.submit
  %div{id: "track-new"}
    = form_for [@conference, @new_track], remote: true, html: {class: 'tabs'} do |f|
      - if @conference.languages.size > 1
        %ul.languages
          - @conference.languages.each do |language|
            %li.track_language= link_to language[:name], "#track-new-#{language[:code]}"
      = f.fields_for :translated_contents do |content_form|
        %div{id: "track-new-#{content_form.object.language}"}
          %label{for: "track_translated_content_title"}= t('formtastic.labels.track.title')
          = content_form.hidden_field(:language)
          = content_form.text_field(:title)
          .description= content_form.text_area(:content)
      = f.submit

#session_types.tabs
  %h4= t('title.session_types')
  %ul.session_types
    - @conference.session_types.each do |session_type|
      %li.session_type= link_to session_type.title, "#session_type-#{session_type.id}"
    %li.session_type= link_to '+', '#session_type-new'
  - @conference.session_types.each do |session_type|
    %div.session_type_tab{id: "session_type-#{session_type.id}"}
      = form_for [@conference, session_type], remote: true, html: {class: 'tabs'} do |f|
        %div.durations
          %h6= t('formtastic.labels.session_type.valid_durations')
          - (session_type.valid_durations + common_durations).uniq.each do |duration|
            %label
              = f.check_box :valid_durations, { multiple: true, class: 'duration', disabled: @conference.visible?}, duration, nil
              = t('formtastic.labels.session_type.session_duration', duration: duration)
          %label.duration_template
            = f.check_box :valid_durations, { multiple: true, class: 'duration', disabled: @conference.visible?}, '%duration', nil
            = t('formtastic.labels.session_type.session_duration', duration: '%duration')
          %span.new_duration
            = text_field_tag(:another_duration, nil, size: 5, maxlength: 3, placeholder: t('formtastic.labels.session_type.duration_placeholder'), class: 'duration_input', disabled: @conference.visible?)
            = button_tag(t('formtastic.labels.session_type.add_other_duration'), disabled: true, class: 'add_other_duration')
        - if @conference.languages.size > 1
          %ul.languages
            - @conference.languages.each do |language|
              %li.session_type_language= link_to language[:name], "#session_type-#{session_type.id}-#{language[:code]}"
        = f.fields_for :translated_contents do |content_form|
          %div{id: "session_type-#{session_type.id}-#{content_form.object.language}"}
            %label{for: ''}= t('formtastic.labels.session_type.title')
            = content_form.hidden_field(:language)
            = content_form.text_field(:title)
            .description= content_form.text_area(:content)
        = f.submit
  %div{id: "session_type-new"}
    = form_for [@conference, @new_session_type], remote: true, html: {class: 'tabs'} do |f|
      %div.durations
        %h6= t('formtastic.labels.session_type.valid_durations')
        - common_durations.each do |duration|
          %label
            = f.check_box :valid_durations, { multiple: true }, duration, nil
            = t('formtastic.labels.session_type.session_duration', duration: duration)
        %label.duration_template
          = f.check_box :valid_durations, { multiple: true }, '%duration', nil
          = t('formtastic.labels.session_type.session_duration', duration: '%duration')
        %span.new_duration
          = text_field_tag(:another_duration, nil, size: 5, maxlength: 3, placeholder: t('formtastic.labels.session_type.duration_placeholder'), class: 'duration_input')
          = button_tag(t('formtastic.labels.session_type.add_other_duration'), disabled: true, class: 'add_other_duration')
      - if @conference.languages.size > 1
        %ul.languages
          - @conference.languages.each do |language|
            %li.session_type_language= link_to language[:name], "#session_type-new-#{language[:code]}"
      = f.fields_for :translated_contents do |content_form|
        %div{id: "session_type-new-#{content_form.object.language}"}
          %label{for: "session_type_translated_content_title"}= t('formtastic.labels.session_type.title')
          = content_form.hidden_field(:language)
          = content_form.text_field(:title)
          .description= content_form.text_area(:content)
      = f.submit

#audience_levels.tabs
  %h4= t('title.audience_levels')
  %ul.audience_levels
    - @conference.audience_levels.each do |audience_level|
      %li.audience_level= link_to audience_level.title, "#audience_level-#{audience_level.id}"
    %li.audience_level= link_to '+', '#audience_level-new'
  - @conference.audience_levels.each do |audience_level|
    %div.audience_level_tab{id: "audience_level-#{audience_level.id}"}
      = form_for [@conference, audience_level], remote: true, html: {class: 'tabs'} do |f|
        - if @conference.languages.size > 1
          %ul.languages
            - @conference.languages.each do |language|
              %li.audience_level_language= link_to language[:name], "#audience_level-#{audience_level.id}-#{language[:code]}"
        = f.fields_for :translated_contents do |content_form|
          %div{id: "audience_level-#{audience_level.id}-#{content_form.object.language}"}
            %label{for: ''}= t('formtastic.labels.audience_level.title')
            = content_form.hidden_field(:language)
            = content_form.text_field(:title)
            .description= content_form.text_area(:content)
        = f.submit
  %div{id: "audience_level-new"}
    = form_for [@conference, @new_audience_level], remote: true, html: {class: 'tabs'} do |f|
      - if @conference.languages.size > 1
        %ul.languages
          - @conference.languages.each do |language|
            %li.audience_level_language= link_to language[:name], "#audience_level-new-#{language[:code]}"
      = f.fields_for :translated_contents do |content_form|
        %div{id: "audience_level-new-#{content_form.object.language}"}
          %label{for: "audience_level_translated_content_title"}= t('formtastic.labels.audience_level.title')
          = content_form.hidden_field(:language)
          = content_form.text_field(:title)
          .description= content_form.text_area(:content)
      = f.submit

#pages.tabs
  %h4= t('title.pages')
  %ul.pages
    - @conference.pages.each do |page|
      %li.page= link_to page.title, "#page-#{page.id}"
    %li.page= link_to '+', '#page-new'
  - @conference.pages.each do |page|
    %div.page_tab{id: "page-#{page.id}"}
      = form_for [@conference, page], remote: true, html: {class: 'tabs'} do |f|
        %label
          = t('formtastic.labels.page.path')
          = f.text_field(:path, disabled: true)
        %label
          = t('formtastic.labels.page.show_in_menu')
          = f.check_box(:show_in_menu, checked: page.show_in_menu? || (page.path == 'home'))
        - if @conference.languages.size > 1
          %ul.languages
            - @conference.languages.each do |language|
              %li.page_language= link_to language[:name], "#page-#{page.id}-#{language[:code]}"
        = f.fields_for :translated_contents do |content_form|
          %div{id: "page-#{page.id}-#{content_form.object.language}"}
            %label{for: ''}= t('formtastic.labels.page.title')
            = content_form.hidden_field(:language)
            = content_form.text_field(:title)
            .description= content_form.text_area(:content)
        = f.submit
  %div{id: "page-new"}
    = form_for [@conference, @new_page], remote: true, html: {class: 'tabs'} do |f|
      %label.required
        = t('formtastic.labels.page.path')
        = f.text_field(:path)
      %label
        = t('formtastic.labels.page.show_in_menu')
        = f.check_box(:show_in_menu)
      - if @conference.languages.size > 1
        %ul.languages
          - @conference.languages.each do |language|
            %li.page_language= link_to language[:name], "#page-new-#{language[:code]}"
      = f.fields_for :translated_contents do |content_form|
        %div{id: "page-new-#{content_form.object.language}"}
          %label
            = t('formtastic.labels.page.title')
            = content_form.hidden_field(:language)
          = content_form.text_field(:title)
          .description= content_form.text_area(:content)
      = f.submit

:javascript
  $(document).ready(function() {
    if (!Modernizr.inputtypes.date) {
      $("input[type='date']").datepicker({
          dateFormat: "yy-mm-dd"
      });
    }
    $('.tabs').tabs();

    var readURL = function(input) {
      if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
          $('form.conference .logo_preview').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
      }
    };

    $("#conference_logo").change(function(){
      readURL(this);
    });

    var tags = [];

    function loadAlreadySelectedTags() {
      var commaSeparatedTags = $('#conference_tag_list').get(0).value;
      tags = commaSeparatedTags.length == 0 ? [] : commaSeparatedTags.split(',');
      for (var i = 0; i < tags.length; i++) {
        var tagItem = $('span:contains(' + tags[i] + ')').get(0).parentElement;
        $(tagItem).addClass('selectedTag');
      }
    }
    loadAlreadySelectedTags();

    $('.tags li').click(function() {
      var newTag = $(this).find('span').text().trim();
      var index = tags.indexOf(newTag);
      if (index == -1) {
        tags.push(newTag);
        $(this).addClass('selectedTag');
      } else {
        tags.splice(index, 1);
        $(this).removeClass('selectedTag');
      }
      $('#conference_tag_list').val(tags.join(','));
    });
  })
