module Api
  module V1
    class SubmissionsController < ::ApplicationController
      skip_before_action :authenticate_user!, :authorize_action
      skip_before_action :set_conference

      rescue_from ActiveRecord::RecordNotFound do |_exception|
        render json: { error: 'not-found' }, status: :not_found
      end

      def index
        conferences = Conference.all
        length = conferences.map{|c| (c.submissions_deadline.to_date - c.submissions_open.to_date).to_i }.max

        conf_distribution = conferences.map do |c|
          conference_length = (c.submissions_deadline.to_date - c.submissions_open.to_date).to_i
          buckets = Array.new(length + 1, 0)
          counts = Session.for_conference(c).active.inject(buckets) do |acc, s|
            creation_percent = (s.created_at.to_date - c.submissions_open.to_date).to_i.to_f / conference_length
            creation_bucket = [0, [(creation_percent * length).to_i, length].min].max
            acc[creation_bucket] = 0 unless acc[creation_bucket]
            acc[creation_bucket]+= 1
            acc
          end

          accumulated = counts.each_with_index.inject(Array.new(length + 1, 0)) do |acc, (count, index)|
            acc[index] = count
            acc[index] += acc[index-1] if index > 0
            acc
          end

          {
            year: c.year,
            creation_distribution: counts,
            accumulated_distribution: accumulated
          }
        end

        conf_distribution = [{"year":2010,"creation_distribution":[0,2,0,0,0,1,0,3,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,5,0,3,0,1,0,0,0,0,0,1,0,7,8,0,6,0,16,0,15,0,14,0,5,0,7,0,4,0,9,0,3,0,4,0,27],"accumulated_distribution":[0,2,2,2,2,3,3,6,6,7,7,7,7,7,7,7,7,8,8,9,9,10,10,10,10,10,10,10,10,10,11,11,16,16,19,19,20,20,20,20,20,20,21,21,28,36,36,42,42,58,58,73,73,87,87,92,92,99,99,103,103,112,112,115,115,119,119,146]},{"year":2011,"creation_distribution":[1,5,0,0,1,0,1,0,2,2,0,2,0,1,1,0,1,0,0,0,0,1,1,0,1,0,3,1,0,0,0,0,0,0,2,0,0,0,0,2,1,0,1,0,2,5,0,4,0,10,9,0,26,5,0,1,0,1,6,0,1,0,4,7,0,9,0,73],"accumulated_distribution":[1,6,6,6,7,7,8,8,10,12,12,14,14,15,16,16,17,17,17,17,17,18,19,19,20,20,23,24,24,24,24,24,24,24,26,26,26,26,26,28,29,29,30,30,32,37,37,41,41,51,60,60,86,91,91,92,92,93,99,99,100,100,104,111,111,120,120,193]},{"year":2012,"creation_distribution":[0,0,0,1,0,2,2,1,0,1,0,2,1,0,4,2,10,0,1,1,4,6,0,6,8,10,0,5,11,20,69,0,7,1,3,0,4,0,0,2,0,3,0,0,0,2,0,0,0,0,0,2,6,0,2,2,2,0,0,2,1,3,0,7,4,14,0,47],"accumulated_distribution":[0,0,0,1,1,3,5,6,6,7,7,9,10,10,14,16,26,26,27,28,32,38,38,44,52,62,62,67,78,98,167,167,174,175,178,178,182,182,182,184,184,187,187,187,187,189,189,189,189,189,189,191,197,197,199,201,203,203,203,205,206,209,209,216,220,234,234,281]},{"year":2013,"creation_distribution":[0,0,0,0,0,0,0,0,0,0,0,3,1,2,0,1,1,0,1,0,2,2,0,1,0,0,4,4,1,0,4,1,0,1,1,0,3,0,3,5,1,0,2,5,0,1,0,2,0,2,1,3,0,3,4,5,2,3,5,0,6,12,7,18,20,22,0,129],"accumulated_distribution":[0,0,0,0,0,0,0,0,0,0,0,3,4,6,6,7,8,8,9,9,11,13,13,14,14,14,18,22,23,23,27,28,28,29,30,30,33,33,36,41,42,42,44,49,49,50,50,52,52,54,55,58,58,61,65,70,72,75,80,80,86,98,105,123,143,165,165,294]},{"year":2014,"creation_distribution":[0,0,0,1,0,1,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,2,2,2,0,1,2,2,2,1,3,1,5,0,4,4,4,7,1,2,0,0,0,1,0,2,1,1,1,5,0,3,4,0,1,0,4,4,7,6,21,17,60],"accumulated_distribution":[0,0,0,1,1,2,3,4,4,4,4,4,5,5,5,6,6,6,6,6,6,6,6,6,6,6,8,10,12,12,13,15,17,19,20,23,24,29,29,33,37,41,48,49,51,51,51,51,52,52,54,55,56,57,62,62,65,69,69,70,70,74,78,85,91,112,129,189]},{"year":2015,"creation_distribution":[1,2,0,2,2,0,0,0,3,2,3,0,1,3,0,0,0,3,0,6,4,0,0,0,3,4,2,0,2,0,3,2,0,0,1,7,0,1,1,0,1,0,2,2,0,2,1,4,6,3,0,11,14,18,23,0,80,3,1,2,2,0,7,1,6,6,0,45],"accumulated_distribution":[1,3,3,5,7,7,7,7,10,12,15,15,16,19,19,19,19,22,22,28,32,32,32,32,35,39,41,41,43,43,46,48,48,48,49,56,56,57,58,58,59,59,61,63,63,65,66,70,76,79,79,90,104,122,145,145,225,228,229,231,233,233,240,241,247,253,253,298]},{"year":2016,"creation_distribution":[5,0,11,0,5,0,1,0,1,0,0,0,0,1,0,3,0,2,0,0,1,0,0,0,4,0,2,0,0,1,0,2,0,3,0,6,0,6,0,0,11,0,2,0,8,0,15,0,0,9,0,8,0,9,0,7,0,0,5,0,9,0,20,0,54,0,0,114],"accumulated_distribution":[5,5,16,16,21,21,22,22,23,23,23,23,23,24,24,27,27,29,29,29,30,30,30,30,34,34,36,36,36,37,37,39,39,42,42,48,48,54,54,54,65,65,67,67,75,75,90,90,90,99,99,107,107,116,116,123,123,123,128,128,137,137,157,157,211,211,211,325]},{"year":2017,"creation_distribution":[2,1,0,0,0,0,3,0,0,0,3,0,1,4,0,0,0,0,1,0,2,0,1,0,1,3,0,1,0,0,0,0,6,0,1,0,3,2,0,3,0,1,2,0,10,0,11,0,5,8,0,10,0,7,6,0,9,0,6,0,8,10,0,10,0,15,0,82],"accumulated_distribution":[2,3,3,3,3,3,6,6,6,6,9,9,10,14,14,14,14,14,15,15,17,17,18,18,19,22,22,23,23,23,23,23,29,29,30,30,33,35,35,38,38,39,41,41,51,51,62,62,67,75,75,85,85,92,98,98,107,107,113,113,121,131,131,141,141,156,156,238]},{"year":2018,"creation_distribution":[6,3,0,1,0,1,4,0,1,0,2,0,2,2,0,2,0,0,2,0,1,0,0,0,11,3,0,3,0,1,1,0,1,0,2,0,1,0,0,2,0,1,0,0,1,0,0,0,1,9,0,1,0,3,3,0,5,0,0,0,0,0,0,0,0,0,0,0],"accumulated_distribution":[6,9,9,10,10,11,15,15,16,16,18,18,20,22,22,24,24,24,26,26,27,27,27,27,38,41,41,44,44,45,46,46,47,47,49,49,50,50,50,52,52,53,53,53,54,54,54,54,55,64,64,65,65,68,71,71,76,76,76,76,76,76,76,76,76,76,76,76]}]

        respond_to do |format|
          format.json { render json: conf_distribution }
          format.js { render json: conf_distribution, callback: params[:callback] }
        end
      end
    end
  end
end